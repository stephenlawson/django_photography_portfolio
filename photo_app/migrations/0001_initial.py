# Generated by Django 5.0.1 on 2025-02-24 07:27

import ckeditor_uploader.fields
import django.core.validators
import django.db.models.deletion
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=100, null=True)),
                ("last_name", models.CharField(max_length=100, null=True)),
                ("email", models.EmailField(max_length=200, null=True)),
                (
                    "phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        max_length=128, region="US"
                    ),
                ),
                (
                    "service",
                    models.CharField(
                        choices=[
                            ("Portrait/Headshot", "Portrait/Headshot"),
                            ("Studio Portrait/Headshot", "Studio Portrait/Headshot"),
                            ("Wedding", "Wedding"),
                            ("Event", "Event"),
                            ("Family", "Family"),
                            ("Graduation", "Graduation"),
                            ("Engagement", "Engagement"),
                            ("Couples", "Couples"),
                            ("Corporate", "Corporate"),
                            ("Second Shooter", "Second Shooter"),
                            ("Other Services", "Other Services"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("package", models.CharField(blank=True, max_length=100, null=True)),
                ("date", models.DateField(null=True)),
                ("location", models.CharField(max_length=200, null=True)),
                ("additional_info", models.TextField(null=True)),
                ("updated", models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="EmailCampaign",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Campaign name for internal reference", max_length=200
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("wedding", "Wedding"),
                            ("elopement", "Elopement"),
                            ("portrait", "Portrait Session"),
                            ("event", "Event"),
                            ("family", "Family Session"),
                            ("graduation", "Graduation"),
                            ("engagement", "Engagement Session"),
                            ("corporate", "Corporate Event"),
                            ("other", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                ("event_date", models.DateField(help_text="Date of the event")),
                (
                    "header_image",
                    models.ImageField(
                        help_text="Header image for the email",
                        upload_to="photo_app/gallery/images/",
                    ),
                ),
                (
                    "gallery_link",
                    models.URLField(help_text="Link to the photo gallery"),
                ),
                (
                    "contact_list",
                    models.FileField(
                        help_text="CSV file with columns: Name, Email",
                        upload_to="email_campaigns/contacts/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["csv"]
                            )
                        ],
                    ),
                ),
                (
                    "email_content",
                    ckeditor_uploader.fields.RichTextUploadingField(
                        help_text="Main content of the email. Use {name} to personalize the greeting."
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Email Campaign",
                "verbose_name_plural": "Email Campaigns",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("date", models.DateField()),
                ("slug", models.SlugField(blank=True, max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="InstagramPost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("post_id", models.CharField(max_length=255)),
                ("permalink", models.TextField()),
                ("media_url", models.TextField()),
                ("timestamp", models.DateTimeField()),
                ("thumbnail_url", models.TextField(null=True)),
                ("media_type", models.CharField(max_length=255)),
                (
                    "thumbnail",
                    models.ImageField(upload_to="photo_app/insta_thumbnails"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PageContent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("page_id", models.CharField(max_length=100, unique=True)),
                (
                    "title",
                    models.CharField(
                        blank=True, max_length=200, null=True, unique=True
                    ),
                ),
                ("meta_description", models.TextField(blank=True, null=True)),
                (
                    "meta_keywords",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("page_content", models.TextField(blank=True, null=True)),
                ("page_content2", models.TextField(blank=True, null=True)),
                ("page_content3", models.TextField(blank=True, null=True)),
                ("page_content4", models.TextField(blank=True, null=True)),
                ("page_content5", models.TextField(blank=True, null=True)),
                ("page_content6", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("place_name", models.CharField(max_length=255)),
                ("rating", models.IntegerField()),
                ("user_ratings_total", models.IntegerField()),
                ("author_name", models.CharField(max_length=255)),
                ("review_text", models.TextField()),
                (
                    "thumbnail",
                    models.ImageField(
                        default="photo_app/review_thumbnails/default_thumbnail.jpg",
                        upload_to="photo_app/review_thumbnails",
                    ),
                ),
                ("post_url", models.URLField(blank=True, null=True)),
                ("review_date", models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "base_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("price_varies", models.BooleanField(default=False)),
                ("price_display", models.CharField(blank=True, max_length=100)),
                ("duration", models.CharField(max_length=50)),
                (
                    "header_image",
                    models.ImageField(blank=True, upload_to="service_headers"),
                ),
                ("order", models.IntegerField(default=0)),
                (
                    "package_image",
                    models.ImageField(
                        blank=True,
                        help_text="Image representing this package",
                        null=True,
                        upload_to="services/packages",
                    ),
                ),
            ],
            options={
                "ordering": ["category__order", "order"],
            },
        ),
        migrations.CreateModel(
            name="ServiceCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("display_name", models.CharField(max_length=100)),
                ("intro_text", models.TextField(blank=True)),
                ("base_price", models.CharField(max_length=100)),
                ("duration", models.CharField(max_length=50)),
                ("order", models.IntegerField(default=0)),
                (
                    "cover_image",
                    models.ImageField(
                        blank=True,
                        help_text="Cover image for the service category",
                        null=True,
                        upload_to="services/categories",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Service Categories",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("graduation", "Graduation"),
                            ("portrait", "Portraits"),
                            ("engagement", "Engagement"),
                            ("wedding", "Wedding"),
                            ("family", "Family"),
                            ("event", "Event"),
                            ("couple", "Couples"),
                            ("film", "Film"),
                            ("medium_format", "Medium Format"),
                            ("35mm", "35mm"),
                        ],
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "intro_text",
                    models.TextField(
                        blank=True, help_text="Intro text for the category.", null=True
                    ),
                ),
                (
                    "category_image",
                    models.ImageField(
                        blank=True,
                        help_text="Cover image for this category",
                        null=True,
                        upload_to="photo_app/category_images",
                    ),
                ),
                (
                    "order",
                    models.IntegerField(
                        default=0,
                        help_text="Order in which the category should appear (lower numbers appear first)",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subcategories",
                        to="photo_app.category",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Categories",
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="ClientGallery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("date", models.DateField()),
                ("slug", models.SlugField(blank=True, max_length=255, unique=True)),
                (
                    "cover_photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="photo_app/gallery/website_galleries",
                    ),
                ),
                (
                    "gallery_text",
                    models.TextField(
                        blank=True, help_text="Summary for the gallery.", null=True
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="galleries",
                        to="photo_app.category",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_comments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EmailLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("recipient_name", models.CharField(max_length=200)),
                ("recipient_email", models.EmailField(max_length=254)),
                ("sent_at", models.DateTimeField(auto_now_add=True)),
                ("status", models.CharField(max_length=50)),
                ("error_message", models.TextField(blank=True, null=True)),
                (
                    "campaign",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="photo_app.emailcampaign",
                    ),
                ),
            ],
            options={
                "ordering": ["-sent_at"],
            },
        ),
        migrations.CreateModel(
            name="Photo3",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="photo_app/gallery/images")),
                ("is_liked", models.BooleanField(default=False)),
                ("size_bytes", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "comments",
                    models.ManyToManyField(
                        through="photo_app.Comment", to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "likes",
                    models.ManyToManyField(
                        blank=True,
                        related_name="liked_photos",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="photos",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="comment",
            name="photo",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="photo_comments",
                to="photo_app.photo3",
            ),
        ),
        migrations.CreateModel(
            name="Photo4",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(upload_to="photo_app/gallery/website_galleries"),
                ),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="photo_app/gallery/website_galleries/thumbnails",
                    ),
                ),
                ("size_bytes", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "orientation",
                    models.CharField(
                        choices=[("portrait", "Portrait"), ("landscape", "Landscape")],
                        default="landscape",
                        max_length=10,
                    ),
                ),
                ("alt_text", models.CharField(blank=True, max_length=255)),
                (
                    "gallery",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="photos",
                        to="photo_app.clientgallery",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PriceTier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("condition", models.CharField(blank=True, max_length=200)),
                ("order", models.IntegerField(default=0)),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="price_tiers",
                        to="photo_app.service",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="AddOn",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("unit", models.CharField(blank=True, max_length=50)),
                ("order", models.IntegerField(default=0)),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="addons",
                        to="photo_app.service",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.AddField(
            model_name="service",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="services",
                to="photo_app.servicecategory",
            ),
        ),
        migrations.CreateModel(
            name="Video",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "video_file",
                    models.FileField(
                        upload_to="photo_app/video/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["mp4", "webm", "ogg"]
                            )
                        ],
                    ),
                ),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True, null=True, upload_to="photo_app/video_thumbnails/"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "order",
                    models.IntegerField(
                        default=0,
                        help_text="Order in which the video appears (lower numbers appear first)",
                    ),
                ),
                (
                    "gallery",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="videos",
                        to="photo_app.clientgallery",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="AccessRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=254)),
                ("comments", models.TextField(blank=True)),
                ("request_date", models.DateTimeField(auto_now_add=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="photo_app.event",
                    ),
                ),
            ],
            options={
                "unique_together": {("email", "event")},
            },
        ),
    ]
